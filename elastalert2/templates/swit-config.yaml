apiVersion: v1
kind: ConfigMap
metadata:
  name: swit
  labels:
    app: {{ template "elastalert.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  swit.py: "import requests\nimport json\nimport argparse\nimport urllib3\nprogram_blacklist=[\"postfix/smtp\"]\nhostname_blacklist=[\"ohbaek.inf\",\"kjh3047.inf\",\"node5.cluster.local\"]\n\ndef
    pushHttps(type,hostname,timestamp,program,message,IP):\n    \n    body=\"{4} \\nHost
    : {0} ( {5} )\\nTime : {1}\\nProgram : {2}\\nMessage : {3}\".format(hostname,timestamp,program,message,type,IP)\n
    \   \n    url = 'https://hook.swit.io/chat/210707004726332e7Xt/zCaSsLIbqHHuAtzRDwiD'\n
    \   \n    headers = {\n    'Content-Type': 'application/json'\n    }\n    \n    query
    = json.dumps(\n        {\n            \"text\":body\n        }\n    )\n    s =
    requests.Session() \n    response = s.post(url,headers=headers,data=query,verify=False)\n
    \   return response.text\n\n\ndef getargs():\n    parser = argparse.ArgumentParser()\n
    \   parser.add_argument('Type',type=str)\n    parser.add_argument('hostname',
    type=str)\n    parser.add_argument('timestamp', type=str)\n    parser.add_argument('program',type=str)\n
    \   parser.add_argument('message',type=str)\n    parser.add_argument('IP',type=str)\n
    \   \n    return parser.parse_args().Type, parser.parse_args().hostname,parser.parse_args().timestamp,parser.parse_args().program,parser.parse_args().message,parser.parse_args().IP\n\ndef
    main():\n    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n
    \   type, hostname, timestamp,program,message,IP=getargs()\n    if program in
    program_blacklist:\n        return\n    if hostname in hostname_blacklist:\n        return\n
    \   result=pushHttps(type,hostname,timestamp,program,message,IP)\n\nif __name__=='__main__':\n
    \   main()"
