
service:
  ui:
    type: NodePort
    nodePort: 30200
  manager:
    type: ClusterIP
    nodePort: ""

persistence:
  defaultClass: true
  defaultFsType: ext4
  defaultClassReplicaCount: 1
  reclaimPolicy: Delete

defaultSettings:
  defaultDataPath: /tmon/longhorn
  taintToleration: longhorn=storage:NoSchedule
  systemManagedComponentsNodeSelector: role=longhorn

longhornManager:
  tolerations:
  - key: "longhorn"
    operator: "Exist"
    effect: "NoSchedule"
  nodeSelector:
   role: "longhorn"

longhornDriver:
  tolerations:
  - key: "longhorn"
    operator: "Exist"
    effect: "NoSchedule"
  nodeSelector:
   role: "longhorn"

longhornUI:
  tolerations:
  - key: "longhorn"
    operator: "Exist"
    effect: "NoSchedule"
  nodeSelector:
   role: "longhorn"

ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  ## Add ingressClassName to the Ingress
  ## Can replace the kubernetes.io/ingress.class annotation on v1.18+
  ingressClassName: ~

  host: xip.io

  ## Set this to true in order to enable TLS on the ingress record
  ## A side effect of this will be that the backend service will be connected at port 443
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: longhorn.local-tls

  ## Ingress annotations done as key:value pairs
  ## If you're using kube-lego, you will want to add:
  ## kubernetes.io/tls-acme: true
  ##
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  annotations:
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: true

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using kube-lego, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: longhorn.local-tls
  #   key:
  #   certificate:

